
package com.thomsonreuters.wokmws.v3.woksearchlite;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.0
 * 2014-06-17T11:08:49.707+08:00
 * Generated source version: 3.0.0
 * 
 */
public final class WokSearchLite_WokSearchLitePort_Client {

    private static final QName SERVICE_NAME = new QName("http://woksearchlite.v3.wokmws.thomsonreuters.com", "WokSearchLiteService");

    private WokSearchLite_WokSearchLitePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = WokSearchLiteService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        WokSearchLiteService ss = new WokSearchLiteService(wsdlURL, SERVICE_NAME);
        WokSearchLite port = ss.getWokSearchLitePort();  
        
        {
        System.out.println("Invoking retrieveById...");
        java.lang.String _retrieveById_databaseId = "";
        java.util.List<java.lang.String> _retrieveById_uid = null;
        java.lang.String _retrieveById_queryLanguage = "";
        com.thomsonreuters.wokmws.v3.woksearchlite.RetrieveParameters _retrieveById_retrieveParameters = null;
        try {
            com.thomsonreuters.wokmws.v3.woksearchlite.SearchResults _retrieveById__return = port.retrieveById(_retrieveById_databaseId, _retrieveById_uid, _retrieveById_queryLanguage, _retrieveById_retrieveParameters);
            System.out.println("retrieveById.result=" + _retrieveById__return);

        } catch (QueryException_Exception e) { 
            System.out.println("Expected exception: QueryException has occurred.");
            System.out.println(e.toString());
        } catch (InternalServerException_Exception e) { 
            System.out.println("Expected exception: InternalServerException has occurred.");
            System.out.println(e.toString());
        } catch (AuthenticationException_Exception e) { 
            System.out.println("Expected exception: AuthenticationException has occurred.");
            System.out.println(e.toString());
        } catch (SessionException_Exception e) { 
            System.out.println("Expected exception: SessionException has occurred.");
            System.out.println(e.toString());
        } catch (InvalidInputException_Exception e) { 
            System.out.println("Expected exception: InvalidInputException has occurred.");
            System.out.println(e.toString());
        } catch (ESTIWSException_Exception e) { 
            System.out.println("Expected exception: ESTIWSException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking retrieve...");
        java.lang.String _retrieve_queryId = "";
        com.thomsonreuters.wokmws.v3.woksearchlite.RetrieveParameters _retrieve_retrieveParameters = null;
        try {
            com.thomsonreuters.wokmws.v3.woksearchlite.SearchResults _retrieve__return = port.retrieve(_retrieve_queryId, _retrieve_retrieveParameters);
            System.out.println("retrieve.result=" + _retrieve__return);

        } catch (QueryException_Exception e) { 
            System.out.println("Expected exception: QueryException has occurred.");
            System.out.println(e.toString());
        } catch (InternalServerException_Exception e) { 
            System.out.println("Expected exception: InternalServerException has occurred.");
            System.out.println(e.toString());
        } catch (AuthenticationException_Exception e) { 
            System.out.println("Expected exception: AuthenticationException has occurred.");
            System.out.println(e.toString());
        } catch (SessionException_Exception e) { 
            System.out.println("Expected exception: SessionException has occurred.");
            System.out.println(e.toString());
        } catch (InvalidInputException_Exception e) { 
            System.out.println("Expected exception: InvalidInputException has occurred.");
            System.out.println(e.toString());
        } catch (ESTIWSException_Exception e) { 
            System.out.println("Expected exception: ESTIWSException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking search...");
        com.thomsonreuters.wokmws.v3.woksearchlite.QueryParameters _search_queryParameters = null;
        com.thomsonreuters.wokmws.v3.woksearchlite.RetrieveParameters _search_retrieveParameters = null;
        try {
            com.thomsonreuters.wokmws.v3.woksearchlite.SearchResults _search__return = port.search(_search_queryParameters, _search_retrieveParameters);
            System.out.println("search.result=" + _search__return);

        } catch (QueryException_Exception e) { 
            System.out.println("Expected exception: QueryException has occurred.");
            System.out.println(e.toString());
        } catch (InternalServerException_Exception e) { 
            System.out.println("Expected exception: InternalServerException has occurred.");
            System.out.println(e.toString());
        } catch (AuthenticationException_Exception e) { 
            System.out.println("Expected exception: AuthenticationException has occurred.");
            System.out.println(e.toString());
        } catch (SessionException_Exception e) { 
            System.out.println("Expected exception: SessionException has occurred.");
            System.out.println(e.toString());
        } catch (InvalidInputException_Exception e) { 
            System.out.println("Expected exception: InvalidInputException has occurred.");
            System.out.println(e.toString());
        } catch (ESTIWSException_Exception e) { 
            System.out.println("Expected exception: ESTIWSException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
